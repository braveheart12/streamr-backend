{"version":3,"sources":["StreamrAccountHandler.jsx"],"names":["unCamelCase","str","replace","s","toUpperCase","StreamrAccountHandlerInput","inputs","form","i","display","width","props","fields","map","field","flex","e","preventDefault","data","input","value","reset","onNew","height","Component","propTypes","StreamrAccountHandlerTable","items","f","item","idField","name","ConfirmButton","el","res","onDelete","StreamrAccountHandlerSegment","state","bind","setState","id","undefined","j","length","StreamrAccountHandler","render","createElement","document","getElementById"],"mappings":"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","file":"StreamrAccountHandler.js","sourcesContent":["import React from 'react'\nimport {string, func, array} from 'prop-types'\nimport ReactDOM from 'react-dom'\n\n/* global ConfirmButton */\n\nconst unCamelCase = str => str\n    .replace(/([a-z])([A-Z])/g, '$1 $2')\n    .replace(/\\b([A-Z]+)([A-Z])([a-z])/, '$1 $2$3')\n    .replace(/^./, s => s.toUpperCase())\n\nclass StreamrAccountHandlerInput extends React.Component {\n    \n    constructor() {\n        super()\n        this.inputs = {}\n    }\n    \n    render() {\n        return (\n            <form className=\"input-group form-inline new-account-item-form\" ref={i => this.form = i} style={{\n                display: 'flex',\n                width: '100%'\n            }}>\n                {['name', ...this.props.fields].map(field => (\n                    <input\n                        key={field}\n                        type=\"text\"\n                        ref={i => this.inputs[field] = i}\n                        name={field}\n                        className=\"form-control\"\n                        placeholder={unCamelCase(field)}\n                        style={{\n                            flex: '1'\n                        }}\n                    />\n                ))}\n                <span className=\"input-group-btn\" onClick={e => {\n                    e.preventDefault()\n                    let data = {}\n                    for (const input in this.inputs) {\n                        if (!this.inputs[input].value) {\n                            return\n                        }\n                        data[input] = this.inputs[input].value\n                    }\n                    this.form.reset()\n                    this.props.onNew(data, e)\n                }} style={{\n                    width: 'auto',\n                    flex: '0',\n                    display: 'inline-block'\n                }}>\n                    <button className=\"new-account-item-button btn btn-default\" type=\"button\" style={{\n                        height: '100%',\n                    }}>\n                        <span className=\"icon fa fa-plus\"/>\n                    </button>\n                </span>\n            </form>\n        )\n    }\n}\nStreamrAccountHandlerInput.propTypes = {\n    fields: array,\n    onNew: func\n}\n\nclass StreamrAccountHandlerTable extends React.Component {\n    \n    render() {\n        const items = this.props.items || []\n        return (\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    {this.props.fields.map(f => (\n                        <th key={f}>\n                            {unCamelCase(f)}\n                        </th>\n                    ))}\n                    <th/>\n                </tr>\n                </thead>\n                <tbody>\n                {items.map(item => (\n                    <tr key={item[this.props.idField]}>\n                        <td>\n                            {item.name}\n                        </td>\n                        {this.props.fields.map(f => (\n                            <td key={f}>\n                                {item[f]}\n                            </td>\n                        ))}\n                        <td>\n                            <button\n                                ref={el => {\n                                    new ConfirmButton(el, {}, res => {\n                                        if (res) {\n                                            this.props.onDelete(item[this.props.idField])\n                                        }\n                                    })\n                                }}\n                                type=\"button\"\n                                className=\"form-group account-item-delete-button btn btn-danger pull-right\"\n                                title=\"Delete key\">\n                                <span className=\"icon fa fa-trash-o\"/>\n                            </button>\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        )\n    }\n}\nStreamrAccountHandlerTable.propTypes = {\n    fields: array,\n    items: array,\n    onDelete: func,\n    idField: string\n}\n\nclass StreamrAccountHandlerSegment extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            items: []\n        }\n        this.onNew = this.onNew.bind(this)\n        this.onDelete = this.onDelete.bind(this)\n    }\n    \n    onNew(data) {\n        this.setState({\n            items: [...this.state.items, data]\n        })\n    }\n    \n    onDelete(id) {\n        if (id === undefined) {\n            return\n        }\n        let items = this.state.items\n        let j\n        for (let i = 0; i < this.state.items.length; i++) {\n            if (this.state.items[i][this.props.idField] === id) {\n                j = i\n            }\n        }\n        delete items[j]\n        this.setState({\n            items\n        })\n    }\n    \n    render() {\n        return (\n            <div className=\"col-xs-12\">\n                <label>\n                    {this.props.name}\n                </label>\n                <StreamrAccountHandlerTable fields={this.props.fields} items={this.state.items}\n                                            idField={this.props.idField} onDelete={this.onDelete}/>\n                <StreamrAccountHandlerInput fields={this.props.fields} onNew={this.onNew}/>\n            </div>\n        )\n    }\n}\nStreamrAccountHandlerSegment.propTypes = {\n    fields: array,\n    items: array,\n    name: string,\n    idField: string\n}\n\nclass StreamrAccountHandler extends React.Component {\n    \n    render() {\n        return (\n            <div className=\"streamr-account-handler row\">\n                <StreamrAccountHandlerSegment name=\"Ethereum\" fields={['privateKey']} idField=\"privateKey\"/>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(React.createElement(StreamrAccountHandler, {}, null), document.getElementById('streamrAccountHandler'))\n"]}